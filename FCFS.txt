#include <stdio.h>
#include <stdlib.h>

#define MAX_PROCESSES 10

typedef struct {
    int pid;   
    int btime; 
    int wtime; 
    int ttime; 
} fcfs;

int main() {
    fcfs p[MAX_PROCESSES];
    int i, n;
    int totwtime = 0;
    int tottime = 0; 

    printf("\nFCFS Scheduling...\n");
    printf("Enter the number of processes: ");
    scanf("%d", &n);

    if (n <= 0 || n > MAX_PROCESSES) {
        printf("Number of processes must be between 1 and %d\n", MAX_PROCESSES);
        return 1;
    }

    printf("Enter the burst time for each process:\n");
    for (i = 0; i < n; i++) {
        p[i].pid = i + 1;
        printf("Process %d: ", p[i].pid);
        scanf("%d", &p[i].btime);
        if (i == 0) {
            p[i].wtime = 0; // Waiting time for the first process is 0
        } else {
            p[i].wtime = p[i - 1].wtime + p[i - 1].btime;
        }
        p[i].ttime = p[i].wtime + p[i].btime; // Turnaround time is waiting time + burst time
        totwtime += p[i].wtime;
        tottime += p[i].ttime;
    }

    printf("\nProcess\tBurst Time\tWaiting Time\tTurnaround Time\n");
    for (i = 0; i < n; i++) {
        printf("%d\t%d\t\t%d\t\t%d\n", p[i].pid, p[i].btime, p[i].wtime, p[i].ttime);
    }

    printf("\nTotal waiting time: %d", totwtime);
    printf("\nAverage waiting time: %.2f", (float)totwtime / n);
    printf("\nTotal turnaround time: %d", tottime);
    printf("\nAverage turnaround time: %.2f\n", (float)tottime / n);

    return 0;
}


Output:

FCFS Scheduling...
Enter the number of processes: 3
Enter the burst time for each process:
Process 1: 5
Process 2: 3
Process 3: 8

Process	Burst Time	Waiting Time	Turnaround Time
1	5		0		5
2	3		5		8
3	8		8		16

Total waiting time: 13
Average waiting time: 4.33
Total turnaround time: 29
Average turnaround time: 9.67